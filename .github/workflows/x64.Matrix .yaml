name: OpenWrt x64 Matrix
permissions: write-all

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Enable SSH debugging'
        required: false
        default: 'false'
  schedule:
    - cron: '0 18 * * 5'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  TZ: Asia/Shanghai
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  GITHUB_RELEASE: https://g3s0.short.gy/OpenWRT
  KERNEL_PATCHVER: 无内核，纯LXC ROOTFS
  PRODUCT_NAME: X86_X64_Matrix

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - name: openwrt24
            branch: openwrt-24.10
            config: OpenWRT/x86_x64/v23.x64.mini.config
            file_name: OP2410_X64_ROOTFS_mini
            version: 24.10
          - name: openwrt23
            branch: openwrt-23.05
            config: OpenWRT/x86_x64/v23.x64.mini.config
            file_name: OP2305_X64_ROOTFS_mini
            version: 23.05
          - name: openwrt22
            branch: openwrt-22.03
            config: OpenWRT/x86_x64/v23.x64.mini.config
            file_name: OP2203_X64_ROOTFS_mini
            version: 22.03

    env:
      FILE_NAME: ${{ matrix.target.file_name }}
      CONFIG_FILE: ${{ matrix.target.config }}
      DISTRIB_REVISION: OpenWRT ${{ matrix.target.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup build environment
        run: |
          sudo rm -rf /etc/apt/sources.list.d/*
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          git clone $REPO_URL -b ${{ matrix.target.branch }} openwrt
          cd openwrt
          useVersionInfo="OpenWRT v${{ matrix.target.version }} 更新记录\n$(git show -s --date=short --format="Author: %an\ndate: %cd\ncommit: %s\ncommit hash: %H")"
          echo "$useVersionInfo" >> $GITHUB_ENV
          echo "DATE=$(date \"+%Y-%m-%d %H\")" >> $GITHUB_ENV
          echo "DATE1=$(date \"+%Y-%m-%d\")" >> $GITHUB_ENV

      - name: Update feeds
        run: cd /workdir/openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd /workdir/openwrt && ./scripts/feeds install -a

      - name: Load custom config
        run: |
          [ -e files ] && mv files /workdir/openwrt/files
          [ -e banner ] && mv banner /workdir/openwrt/package/base-files/files/etc/banner
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE /workdir/openwrt/.config
          chmod +x OpenWRT/custom.sh
          cd /workdir/openwrt
          $GITHUB_WORKSPACE/OpenWRT/custom.sh

      - name: SSH connection to Actions (optional)
        if: github.event.inputs.ssh == 'true'
        uses: P3TERX/ssh2actions@v1.0.0
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Download packages
        run: |
          cd /workdir/openwrt
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        id: compile
        run: |
          cd /workdir/openwrt
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=_$(date \"+%Y%m%d%H%M\")" >> $GITHUB_ENV
          echo "FILE_DATE2=$(date \"+%Y%m%d%H%M\")" >> $GITHUB_ENV

      - name: Organize firmware
        id: organize
        if: steps.compile.outputs.status == 'success'
        run: |
          cd /workdir/openwrt/bin/targets/*/*
          rm -rf packages *.buildinfo profiles.json sha256sums *.vmdk *.img.gz *.bin *.manifest
          mv *.tar.gz $GITHUB_WORKSPACE/${{ matrix.target.branch }}-${{ env.FILE_DATE2 }}.tar.gz
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        if: steps.organize.outputs.status == 'success'
        with:
          name: Firmware-${{ matrix.target.branch }}-${{ env.FILE_DATE2 }}
          path: ${{ env.FIRMWARE }}/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: R${{ env.DATE1 }} for ${{ env.PRODUCT_NAME }}
          allowUpdates: true
          tag: ${{ env.PRODUCT_NAME }}
          commit: ${{ github.sha }}
          token: ${{ secrets.TOKEN3 }}
          body: |
            **OpenWRT official Mini Firmware for x86/64**
            ${{ join(env.*VersionInfo, '\n') }}

      - name: Remove old release assets (5 weeks+)
        uses: dev-drprasad/delete-older-releases@master
        with:
          repo: ${{ github.repository }}
          keep_latest: 0
          delete_tag_pattern: ""
          delete_tags: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN3 }}

      - name: Telegram notification
        run: |
          curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=
          ✅ ${{ env.PRODUCT_NAME }} 所有版本已成功编译发布！
          🧊 分支包括: openwrt-22 / 23 / 24
          📥 地址: ${{ env.GITHUB_RELEASE }}
          " >/dev/null 2>&1
